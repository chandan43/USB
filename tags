!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
KDIR	Makefile	/^KDIR=\/lib\/modules\/$(shell uname -r)\/build$/;"	m
USB_SKEL_MINOR_BASE	test.c	41;"	d	file:
USB_SKEL_MINOR_BASE	usbdev.c	39;"	d	file:
USB_SKEL_PRODUCT_ID	test.c	30;"	d	file:
USB_SKEL_PRODUCT_ID	usbdev.c	16;"	d	file:
USB_SKEL_VENDOR_ID	test.c	29;"	d	file:
USB_SKEL_VENDOR_ID	usbdev.c	15;"	d	file:
bulk_in_buffer	test.c	/^	unsigned char *		bulk_in_buffer;		\/* the buffer to receive data *\/$/;"	m	struct:usb_skel	file:
bulk_in_buffer	usbdev.c	/^	unsigned char * bulk_in_buffer;         \/*the buffer to receive data *\/$/;"	m	struct:usb_dev	file:
bulk_in_endpointAddr	test.c	/^	__u8			bulk_in_endpointAddr;	\/* the address of the bulk in endpoint *\/$/;"	m	struct:usb_skel	file:
bulk_in_endpointAddr	usbdev.c	/^	__u8	bulk_in_endpointAddr;	\/* the address of the bulk in endpoint *\/$/;"	m	struct:usb_dev	file:
bulk_in_size	test.c	/^	size_t			bulk_in_size;		\/* the size of the receive buffer *\/$/;"	m	struct:usb_skel	file:
bulk_in_size	usbdev.c	/^	size_t bulk_in_size;                   \/*the size of the receive buffer *\/$/;"	m	struct:usb_dev	file:
bulk_out_endpointAddr	test.c	/^	__u8			bulk_out_endpointAddr;	\/* the address of the bulk out endpoint *\/$/;"	m	struct:usb_skel	file:
bulk_out_endpointAddr	usbdev.c	/^	__u8	bulk_out_endpointAddr;	\/* the address of the bulk out endpoint *\/$/;"	m	struct:usb_dev	file:
interface	test.c	/^	struct usb_interface *	interface;		\/* the interface for this device *\/$/;"	m	struct:usb_skel	typeref:struct:usb_skel::usb_interface	file:
interface	usbdev.c	/^	struct usb_interface * interface;       \/* the interface for this device *\/$/;"	m	struct:usb_dev	typeref:struct:usb_dev::usb_interface	file:
kref	test.c	/^	struct kref		kref;$/;"	m	struct:usb_skel	typeref:struct:usb_skel::kref	file:
kref	usbdev.c	/^	struct kref kref;              $/;"	m	struct:usb_dev	typeref:struct:usb_dev::kref	file:
obj-m	Makefile	/^obj-m :=usbdev.o$/;"	m
skel_class	test.c	/^static struct usb_class_driver skel_class = {$/;"	v	typeref:struct:usb_class_driver	file:
skel_delete	test.c	/^static void skel_delete(struct kref *kref)$/;"	f	file:
skel_disconnect	test.c	/^static void skel_disconnect(struct usb_interface *interface)$/;"	f	file:
skel_driver	test.c	/^static struct usb_driver skel_driver = {$/;"	v	typeref:struct:usb_driver	file:
skel_driver	test.c	/^static struct usb_driver skel_driver;$/;"	v	typeref:struct:usb_driver	file:
skel_fops	test.c	/^static struct file_operations skel_fops = {$/;"	v	typeref:struct:file_operations	file:
skel_open	test.c	/^static int skel_open(struct inode *inode, struct file *file)$/;"	f	file:
skel_probe	test.c	/^static int skel_probe(struct usb_interface *interface, const struct usb_device_id *id)$/;"	f	file:
skel_read	test.c	/^static ssize_t skel_read(struct file *file, char __user *buffer, size_t count, loff_t *ppos)$/;"	f	file:
skel_release	test.c	/^static int skel_release(struct inode *inode, struct file *file)$/;"	f	file:
skel_table	test.c	/^static struct usb_device_id skel_table [] = {$/;"	v	typeref:struct:usb_device_id	file:
skel_write	test.c	/^static ssize_t skel_write(struct file *file, const char __user *user_buffer, size_t count, loff_t *ppos)$/;"	f	file:
skel_write_bulk_callback	test.c	/^static void skel_write_bulk_callback(struct urb *urb, struct pt_regs *regs)$/;"	f	file:
to_skel_dev	test.c	53;"	d	file:
to_usb_dev	usbdev.c	55;"	d	file:
udev	test.c	/^	struct usb_device *	udev;			\/* the usb device for this device *\/$/;"	m	struct:usb_skel	typeref:struct:usb_skel::usb_device	file:
udev	usbdev.c	/^	struct usb_device* udev;                 \/* the usb device for this device *\/$/;"	m	struct:usb_dev	typeref:struct:usb_dev::usb_device	file:
usb_delete	usbdev.c	/^static void usb_delete(struct kref *ref){$/;"	f	file:
usb_dev	usbdev.c	/^struct usb_dev {$/;"	s	file:
usb_disconnect	usbdev.c	/^void usb_disconnect(struct usb_interface *intf){$/;"	f
usb_drv	usbdev.c	/^struct struct usb_driver usb_drv;$/;"	v	typeref:struct:usb_driver
usb_drv	usbdev.c	/^struct usb_driver usb_drv={$/;"	v	typeref:struct:usb_driver
usb_exit	usbdev.c	/^module_exit(usb_exit);$/;"	v
usb_exit	usbdev.c	/^void __exit usb_exit(void){$/;"	f
usb_init	usbdev.c	/^int __init usb_init(void){$/;"	f
usb_init	usbdev.c	/^module_init(usb_init);$/;"	v
usb_open	usbdev.c	/^static int usb_open(struct inode *inodep, struct file *filep){$/;"	f	file:
usb_probe	usbdev.c	/^static int usb_probe(struct usb_interface *intf,const struct usb_device_id *id){$/;"	f	file:
usb_skel	test.c	/^struct usb_skel {$/;"	s	file:
usb_skel_exit	test.c	/^module_exit (usb_skel_exit);$/;"	v
usb_skel_exit	test.c	/^static void __exit usb_skel_exit(void)$/;"	f	file:
usb_skel_init	test.c	/^module_init (usb_skel_init);$/;"	v
usb_skel_init	test.c	/^static int __init usb_skel_init(void)$/;"	f	file:
usb_table	usbdev.c	/^static const struct usb_device_id usb_table[]={$/;"	v	typeref:struct:usb_device_id	file:
